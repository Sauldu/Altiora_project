{"instruction": "Génère un test Playwright pour vérifier que le bouton 'Soumettre' est désactivé après la soumission d'un formulaire.", "input": "Le formulaire a un champ #username et un bouton #submit-button. Le bouton doit être désactivé après le clic.", "output": "import pytest\nfrom playwright.sync_api import Page, expect\n\ndef test_submit_button_disabled(page: Page):\n    page.goto(\"http://localhost:8080/form\")\n    page.locator(\"#username\").fill(\"testuser\")\n    page.locator(\"#submit-button\").click()\n    expect(page.locator(\"#submit-button\")).to_be_disabled()\n"}
{"instruction": "Créer un test Playwright qui navigue vers une page spécifique et vérifie son titre.", "input": "URL: https://example.com/about, Titre attendu: 'About Us'", "output": "from playwright.sync_api import Page, expect\n\ndef test_about_page_title(page: Page):\n    page.goto(\"https://example.com/about\")\n    expect(page).to_have_title(\"About Us\")\n"}
{"instruction": "Écrire un test Playwright pour remplir un formulaire de contact et vérifier un message de succès.", "input": "Champs: #name, #email, #message. Bouton: #send-button. Message de succès: 'Message sent successfully!'", "output": "from playwright.sync_api import Page, expect\n\ndef test_contact_form_submission(page: Page):\n    page.goto(\"http://localhost:8080/contact\")\n    page.locator(\"#name\").fill(\"John Doe\")\n    page.locator(\"#email\").fill(\"john.doe@example.com\")\n    page.locator(\"#message\").fill(\"This is a test message.\")\n    page.locator(\"#send-button\").click()\n    expect(page.locator(\"text=Message sent successfully!\")).to_be_visible()\n"}
