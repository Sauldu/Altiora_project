{"instruction": "Generate a Playwright test for login page", "input": "Test login with valid credentials", "output": "async def test_login_valid(page: Page):\n    await page.goto('/login')\n    await page.fill('#email', 'user@test.com')\n    await page.fill('#password', 'password123')\n    await page.click('#submit')\n    await expect(page).to_have_url('/dashboard')"}
{"instruction": "Create a test for form validation", "input": "Verify required fields show error messages", "output": "async def test_form_validation(page: Page):\n    await page.goto('/register')\n    await page.click('#submit')\n    await expect(page.locator('.error-email')).to_contain_text('Email is required')\n    await expect(page.locator('.error-password')).to_contain_text('Password is required')"}
{"instruction": "Write a test for button click functionality", "input": "Test that clicking button shows modal", "output": "async def test_button_shows_modal(page: Page):\n    await page.goto('/dashboard')\n    await page.click('#open-modal-btn')\n    await expect(page.locator('.modal')).to_be_visible()\n    await expect(page.locator('.modal-title')).to_contain_text('Confirmation')"}
{"instruction": "Generate test for dropdown selection", "input": "Test selecting option from dropdown menu", "output": "async def test_dropdown_selection(page: Page):\n    await page.goto('/settings')\n    await page.select_option('#language-select', 'fr')\n    await expect(page.locator('#current-language')).to_contain_text('Fran√ßais')"}
{"instruction": "Create test for file upload", "input": "Test uploading a file", "output": "async def test_file_upload(page: Page):\n    await page.goto('/upload')\n    await page.set_input_files('#file-input', 'test-file.pdf')\n    await page.click('#upload-btn')\n    await expect(page.locator('.upload-success')).to_be_visible()"}
